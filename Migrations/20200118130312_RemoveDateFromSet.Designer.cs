// <auto-generated />
using System;
using HypertropeCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HypertropeCore.Migrations
{
    [DbContext(typeof(HypertropeCoreContext))]
    [Migration("20200118130312_RemoveDateFromSet")]
    partial class RemoveDateFromSet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HypertropeCore.Models.Metric", b =>
                {
                    b.Property<Guid>("MetricId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OneRm")
                        .HasColumnType("int");

                    b.Property<Guid?>("SetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("MetricId");

                    b.HasIndex("SetId");

                    b.ToTable("Metrics");
                });

            modelBuilder.Entity("HypertropeCore.Models.Set", b =>
                {
                    b.Property<Guid>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Exercise")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("SetId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("HypertropeCore.Models.Metric", b =>
                {
                    b.HasOne("HypertropeCore.Models.Set", "Set")
                        .WithMany()
                        .HasForeignKey("SetId");
                });
#pragma warning restore 612, 618
        }
    }
}
